name: 2-5. Build CaptureStream2 for Windows ARM

on:
  workflow_dispatch:
    inputs:
      yyyymmdd:
        description: 'Date string for release (yyyymmdd)'
        required: true

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/csreviser/qt6-win-arm:latest

    steps:
      - name: Checkout this repo
        uses: actions/checkout@v4

      - name: Show qt.toolchain.cmake contents
        run: |
          echo "----- qt.toolchain.cmake -----"
          cat /opt/qt6-arm/lib/cmake/Qt6/qt.toolchain.cmake || echo "File not found"

      - name: Clone CaptureStream2
        run: |
          git clone https://github.com/CSReviser/CaptureStream2.git
          cd CaptureStream2
          git checkout feature
          git submodule update --init --recursive

      - name: Create build directory
        working-directory: CaptureStream2
        run: |
          mkdir -p build

      - name: Configure with CMake
        working-directory: CaptureStream2
        env:
          QT_USE_ORIGINAL_COMPILER: ON
        run: |
          /opt/qt6-arm/bin/qt-cmake -B build -S . \
            -GNinja \
            -DCMAKE_TOOLCHAIN_FILE=/opt/qt6-arm/lib/cmake/Qt6/qt.toolchain.cmake \
            -DCMAKE_C_COMPILER=aarch64-w64-mingw32-gcc \
            -DCMAKE_CXX_COMPILER=aarch64-w64-mingw32-g++ \
            -DCMAKE_SYSTEM_NAME=Windows \
            -DCMAKE_SYSTEM_PROCESSOR=aarch64 \
            -DQT_BUILD_SHARED=OFF \
           || { \
             echo "----- CMakeError.log -----"; cat build/CMakeFiles/CMakeError.log || true; \
             echo "----- CMakeOutput.log -----"; cat build/CMakeFiles/CMakeOutput.log || true; \
             echo "----- CMakeCache.txt -----"; cat build/CMakeCache.txt || true; \
             exit 1; \
            } 

      - name: Build
        working-directory: CaptureStream2
        run: cmake --build build --parallel

      - name: Create WinCaptureStream2 directory and move exe
        working-directory: CaptureStream2
        shell: bash
        run: |
          mkdir -p build/WinCaptureStream2
          ls -r
          ls -r ./build
          mv build/CaptureStream2.exe build/WinCaptureStream2/
          cp ./CaptureStream2/qss_files/stylesheet-win.qss build/WinCaptureStream2/

      - name: Create ZIP file
        working-directory: CaptureStream2
        run: |
          cd build
          zip -r "CaptureStream-arm64-${{ github.event.inputs.yyyymmdd }}.zip" WinCaptureStream2

      - name: Format release title
        id: format_date
        shell: bash
        working-directory: CaptureStream2
        run: |
          yyyy="${{ github.event.inputs.yyyymmdd }}"
          echo "title=${yyyy:0:4}/${yyyy:4:2}/${yyyy:6:2}版リリース (Windows ARM)" >> "$GITHUB_OUTPUT"

      - name: Upload ZIP to GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: build/CaptureStream-arm64-${{ github.event.inputs.yyyymmdd }}.zip
          tag_name: ${{ github.event.inputs.yyyymmdd }}
          name: ${{ steps.format_date.outputs.title }}
          body: "Static build for Windows ARM (Qt 6.9.0)"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
