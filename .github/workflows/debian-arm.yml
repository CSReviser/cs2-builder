name: 3-3. arn Build CS2 debian with Qt Static (Docker)

on:
  workflow_dispatch:
    inputs:
      yyyymmdd:
        description: 'Date string for release (yyyymmdd)'
        required: true

env:
  QT_VERSION: 6.9.1
  IMAGE_NAME: ghcr.io/csreviser/qt6-debian-arm-static:latest
# ghcr.io/csreviser/qt6-ubuntu-static:latest

jobs:
  build:
    runs-on: ubuntu-24.04-arm
    container:
      image: ghcr.io/csreviser/qt6-debian-arm-static:latest

    steps:

      - name: Install GitHub CLI
        run: |
          apt-get update
          apt-get install -y curl zip
          curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | \
          gpg --dearmor -o /usr/share/keyrings/githubcli-archive-keyring.gpg
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | \
          tee /etc/apt/sources.list.d/github-cli.list > /dev/null
          apt-get update
          apt-get install -y gh p7zip-full lzip bzip2 fuse sudo libfuse2 kmod
   #       sudo modprobe fuse
  #        sudo groupadd fuse
          
      - name: Mark repo as safe
        run: git config --global --add safe.directory "${GITHUB_WORKSPACE}"

      - name: Clone CaptureStream2
        run: |
          git clone https://github.com/CSReviser/CaptureStream2.git
          cd CaptureStream2
          git submodule update --init --recursive
#          git checkout feature
          
      - name: Build using Docker container with Qt static
        run: |
          cd CaptureStream2
          mkdir -p build && cd build
          qt-cmake .. -DQT_DEBUG_FIND_PACKAGE=ON
          cmake --build . --parallel
          mkdir -p LinCaptureStream2
          cp CaptureStream2 ./LinCaptureStream2/
          cp ../qss_files/stylesheet-ubu.qss ./LinCaptureStream2
          cp -r ../qss_files/License ./LinCaptureStream2
          wget -qO ffmpeg-static-ubuntu-arm.zip https://github.com/CSReviser/ffmpeg-build/releases/download/7.1.1/ffmpeg-static-ubuntu-arm.zip
          7z e ffmpeg-static-ubuntu-arm.zip ffmpeg -o./LinCaptureStream2
          chmod -R 755 ./LinCaptureStream2
      - name: Upload AppImage
        uses: actions/upload-artifact@v4
        with:
          name: CaptureStream2-debian-arm
          path: ./CaptureStream2/build/LinCaptureStream2

      - name: Download linuxdeploy and plugin
        run: |
          cd CaptureStream2
          wget https://github.com/linuxdeploy/linuxdeploy/releases/download/continuous/linuxdeploy-aarch64.AppImage
          chmod +x linuxdeploy-aarch64.AppImage
          ./linuxdeploy-aarch64.AppImage --appimage-extract
          mv squashfs-root linuxdeploy-extracted
          chmod +x linuxdeploy-extracted/AppRun
#          wget https://github.com/linuxdeploy/linuxdeploy-plugin-qt/releases/download/continuous/linuxdeploy-plugin-qt-aarch64.AppImage
#          chmod +x linuxdeploy-plugin-qt-aarch64.AppImage

      - name: Copy missing libs
        run: |
          mkdir -p CaptureStream2/AppDir/usr/lib
          ls /lib/aarch64-linux-gnu
          cp /lib/aarch64-linux-gnu/libxkbcommon.so.0* CaptureStream2/AppDir/usr/lib/
          cp /lib/aarch64-linux-gnu/libglib-2.0.so.0* CaptureStream2/AppDir/usr/lib/
          cp /lib/aarch64-linux-gnu/libgthread-2.0.so.0* CaptureStream2/AppDir/usr/lib/
          cp /lib/aarch64-linux-gnu/libwayland*.so.* CaptureStream2/AppDir/usr/lib/
          cp /lib/aarch64-linux-gnu/libdbus-1.so.3* CaptureStream2/AppDir/usr/lib/
          cp /lib/aarch64-linux-gnu/libsystemd.so.0* CaptureStream2/AppDir/usr/lib/
          cp /lib/aarch64-linux-gnu/libxcb.so.1* CaptureStream2/AppDir/usr/lib/
          cp /lib/aarch64-linux-gnu/libXau.so.6* CaptureStream2/AppDir/usr/lib/
          cp /lib/aarch64-linux-gnu/libXdmcp.so.6* CaptureStream2/AppDir/usr/lib/
          cp /lib/aarch64-linux-gnu/libbsd.so.0* CaptureStream2/AppDir/usr/lib/
          cp /lib/aarch64-linux-gnu/libxcb-cursor.so.0* CaptureStream2/AppDir/usr/lib/
          mkdir -p CaptureStream2/AppDir/usr/bin
          cat <<EOF > CaptureStream2/AppDir/usr/bin/qt.conf
          [Paths]
          Plugins=../lib/qt6/plugins
          Qml2Imports=../lib/qt6/qml
          EOF
          
 #         cp /lib/aarch64-linux-gnu/libpcre.so.3* CaptureStream2/AppDir/usr/lib/
          
      - name: Extract linuxdeploy AppImage
        run: |
         cd CaptureStream2
         chmod +x linuxdeploy-aarch64.AppImage
         ./linuxdeploy-aarch64.AppImage --appimage-extract
         mv squashfs-root linuxdeploy-extracted
         chmod +x linuxdeploy-extracted
         ./linuxdeploy-plugin-qt-aarch64.AppImage --appimage-extract
         mv squashfs-root plugin-qt-extracted
         chmod +x plugin-qt-extracted

      - name: Build AppImage without FUSE
        run: |
         cd CaptureStream2
         ./linuxdeploy-extracted/AppRun \
           --appdir AppDir \
           --desktop-file CaptureStream2.desktop \
           --icon-file icon.png \
           --executable ./build/CaptureStream2 \
           --output appimage 
           cd build
           mkdir -p LinCaptureStream2
           cp ../CaptureStream2-aarch64.AppImage ./LinCaptureStream2/CaptureStream2
           cp ../qss_files/stylesheet-ubu.qss ./LinCaptureStream2
           cp -r ../qss_files/License ./LinCaptureStream2
           wget -qO ffmpeg-static-ubuntu-arm.zip https://github.com/CSReviser/ffmpeg-build/releases/download/7.1.1/ffmpeg-static-ubuntu-arm.zip
           7z e ffmpeg-static-ubuntu-arm.zip ffmpeg -o./LinCaptureStream2
           chmod -R 755 ./LinCaptureStream2
 #        ./linuxdeploy-aarch64.AppImage \
 #          --appdir AppDir \
 #          --desktop-file CaptureStream2.desktop \
 #          --icon-file icon.png \
 #          --executable ./build/CaptureStream2 \
 #          --output appimage \
 #          --plugin qt


      - name: Create ZIP file
        run: |
          cd CaptureStream2/build
          zip -r "CaptureStream2-debian-arm-${{ github.event.inputs.yyyymmdd }}.zip" LinCaptureStream2
          cp ./CaptureStream2 ./LinCaptureStream2/CaptureStream2
          zip -r "CaptureStream2-ubuntu-arm-${{ github.event.inputs.yyyymmdd }}.zip" LinCaptureStream2
          
      - name: Upload zip to GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: CaptureStream2/build/CaptureStream2-debian-arm-${{ github.event.inputs.yyyymmdd }}.zip
          tag_name: ${{ github.event.inputs.yyyymmdd }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload zip to GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: CaptureStream2/build/CaptureStream2-ubuntu-arm-${{ github.event.inputs.yyyymmdd }}.zip
          tag_name: ${{ github.event.inputs.yyyymmdd }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Upload AppImage
        uses: actions/upload-artifact@v4
        with:
          name: CaptureStream2-AppImage
          path: ./CaptureStream2/CaptureStream2-aarch64.AppImage

          
          
#      - name: Create ZIP file
#        run: |
#          cd CaptureStream2/build
#         zip -r "CaptureStream2-ubuntu-arn-${{ github.event.inputs.yyyymmdd }}.zip" LinCaptureStream2
      
#      - name: Upload zip to GitHub Release
#        uses: softprops/action-gh-release@v2
#        with:
#          files: CaptureStream2/build/CaptureStream2-ubuntu-arn-${{ github.event.inputs.yyyymmdd }}.zip
#          tag_name: ${{ needs.mac_build.outputs.tag }}
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
